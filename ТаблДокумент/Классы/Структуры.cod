class "Структурированные Данные";

Import  Classes Макет, Области, Функции;
-----------------------------------------------------------------------------------
----------------------------НАЧАЛО!!-----------------------------------------------
-----------------------------------------------------------------------------------
inclass -- Public -- Private

--Эти поля Зарезервированны!!!
ИменаКолонок : TemplateSection;
ИменаСтрок   : TemplateSection;
Данные       : TemplateSection;
Типы         : TemplateSection;
--Эти поля Зарезервированны!!!

var Параметры           : Параметры;
var Хозяин  Synonym Own : Вариант;


  func Создать        synonym Create :2 0Структуры;
       Result = inherited Create;
       Result.Init;
       Result.Параметры        = ТаблДокумент.Параметры.Create;
       Result.Параметры.Хозяин = Result;
  end ;

--inobject Public

2  var ТекущаяОбласть synonym Current : 0Вариант[2]2;0 --Нужен Вариант именно "Структуры"!!!

--inobject Public

  proc Init;
    Clear;
  end ;

  func Обновить : Логическое;

  end;

  func Очистить      synonym Clear : integer;
--       Имя            = ""2;
       2Текущ0ая2Область0 = Nil2;
       Хозяин         = Nil2;
--       CurrentColumn  = Nil2;
--       CurrentRow     = Nil2;
--       RowsCount      = 0;
--       ColumnsCount   = 0;
  end;

  func ЕстьДанные (var Temp:Вариант=Nil) : Логическое;
    var i : Целое;
      Result = Ложь;
      Если Temp = Nil Тогда
        i = SearchInArray(мас2Области0[1], "ДАННЫЕ");
        Если i=-1 Тогда
          Result = Ложь;
        Иначе
           Если мас2Области0[220,i] = Nil Тогда
           Иначе
             Данные = мас2Области0[220,i];
             Если Данные.ColumnsCount >1 или
                  Данные.RowsCount    >1 Тогда
                Result = Истина;
             end;
           end;
        end;
      Иначе
        i = SearchInArray(мас2Области0[1], Up(TEMP));
        Если i=-1 Тогда
          Result = Ложь;
        Иначе
           Если мас2Области0[220,i] = Nil Тогда
           Иначе
             Данные = мас2Области0[220,i];
             Если Данные.ColumnsCount >1 или
                  Данные.RowsCount    >1 Тогда
                Result = Истина;
             end;
           end;
        end;
      end;
  end;

--inclass Public -- Public -- Private

  func ВзятьДанные(var Temp:Вариант=Nil):Вариант[2];
    var i,X,Y           : Целое;
    var Вертикально     : Логическое;
    var Горизонтально   : Логическое;
    var Приводить       : Логическое;
    var ТипыПолей       : Вариант[1];
    var ТипП            : Вариант;
    var Сообщ           : Строка;
    var Contents        : Строка;
     i = 0; Сообщ ="";
     ТипыПолей       = Nil;
     Вертикально     = Ложь;
     Горизонтально   = Ложь;
     Приводить       = Ложь;

     Если Temp = Nil Тогда
     Иначе
        Temp = 2Текущ0ая2Область0;
     end;
        если ЕстьДанные Тогда
        --Определяем Структуру данных
          если ЕстьТипы  Тогда
            Приводить = Истина;
            Если Типы.ColumnsCount = 1 Тогда -- Только Так!!
              Вертикально = Истина;
              для X = 1.. Типы.RowsCount цикл
                ВставитьВМассив(ТипыПолей, X, ВернутьТипПоля(Типы.Клетка[1,X].Contents) );
              конец;
            end;
            Если Типы.RowsCount    = 1 Тогда -- Только Так!!
              Горизонтально = Истина;
              для Y = 1.. Типы.ColumnsCount цикл
                ВставитьВМассив(ТипыПолей, Y, ВернутьТипПоля(Типы.Клетка[Y,1].Contents) );
              конец;
            end;
          конец;
          если ЕстьИменаКолонок Тогда --Обычное рассположение данных
             i = 1;
          конец;
          если ЕстьИменаСтрок Тогда
             i = i + 1;
          конец;
          если i = 0 Тогда  --Данные без "Заголовков"
             для Y = 1.. Данные.RowsCount цикл
               для X = 1.. Данные.ColumnsCount цикл
                 ВставитьВМассив(2Текущ0ая2Область0[X], Y, Данные.Клетка[X,Y].Contents);
               конец;
              конец;
          Иначе
            если i = 2 Тогда  --Данные И с "ИменаКолонок" И с "ИменСтрок" !!!
              -----
              -----
              -----
            Иначе
              если ИменаСтрок = Nil Тогда  --Данные с "ИменаКолонок"
               для Y = 1.. Данные.RowsCount цикл
                  Сообщ = "";
                  если Y = 1 Тогда
                    для X = 1.. Данные.ColumnsCount цикл
                      ВставитьВМассив(2Текущ0ая2Область0[1],X, ИменаКолонок.Клетка[X,1].Contents);
                    конец;
                  Иначе
                     Попытка
                       Сообщ = "Для строки №"+Стр(Y);
                       для X = 1.. Данные.ColumnsCount цикл
                          Contents = Данные.Клетка[X,Y].Contents ;
                          если Приводить Тогда --Есть Типы полей!
                            ТипП  = ТипыПолей[X];
                            Сообщ = Сообщ + ", Колонки №"+Стр(X)+ " и значение = "+Contents+" - ошибка преобразования к формату - "+ТипП+"!" ;
                            ЕСЛИ   ТИПП="СТРОКА" ТОГДА
                              ВСТАВИТЬВМАССИВ(2ТЕКУЩ0АЯ2ОБЛАСТЬ0[Y], X, (CONTENTS КАК STRING) );
                            ЕСЛИЖЕ ТИПП="ЧИСЛО" ТОГДА
                              ВСТАВИТЬВМАССИВ(2ТЕКУЩ0АЯ2ОБЛАСТЬ0[Y], X, КАКЧИСЛО(CONTENTS) );   --12
                            ЕСЛИЖЕ ТИПП="ЦЕЛОЕ" ТОГДА
                              ЕСЛИ CONTENTS="" ТОГДА
                                CONTENTS="0";
                              END;
                              ВСТАВИТЬВМАССИВ(2ТЕКУЩ0АЯ2ОБЛАСТЬ0[Y], X, КАКЧИСЛО(CONTENTS) );
                            ЕСЛИЖЕ ТИПП="ДАТА" ТОГДА
                              ВСТАВИТЬВМАССИВ(2ТЕКУЩ0АЯ2ОБЛАСТЬ0[Y], X, СТРОКАВДАТУ(CONTENTS) );
                            ЕСЛИЖЕ ТИПП="ЛОГИЧЕСКОЕ" ТОГДА
                               ЕСЛИ CONTENTS="ИСТИНА" ИЛИ CONTENTS="TRUE" ИЛИ CONTENTS="1" ТОГДА
                                 ВставитьВМассив(2Текущ0ая2Область0[Y], X, Истина);
                               Иначе
                                 ВставитьВМассив(2Текущ0ая2Область0[Y], X, Ложь  );
                               end;
                            Иначе
                              ВставитьВМассив(2Текущ0ая2Область0[Y], X, Contents);
                            end;
                          Иначе
                            ВставитьВМассив(2Текущ0ая2Область0[Y], X, Contents);
                          конец;
                       конец;
                     Исключение
                       Трассировка(Сообщ);
                     конец;
                  конец;
                конец;
              Иначе                        --Данные с "ИменСтрок"
                -- ИменаСтрок
                -- ИменаСтрок
                -- ИменаСтрок
              конец;
            конец;
          конец;
        конец;
     Result = 2Текущ0ая2Область0;
  end;

  func ВернутьТипПоля( Тип_Клетки :Строка): Вариант ;
    Тип_Клетки = Up(Тип_Клетки);
    ЕСЛИ   ТИП_КЛЕТКИ="СТРОКА" ИЛИ ТИП_КЛЕТКИ="STRING"  ТОГДА
       RESULT = "СТРОКА";
    ЕСЛИЖЕ ТИП_КЛЕТКИ="ЧИСЛО"  ИЛИ ТИП_КЛЕТКИ="NUMERIC" ИЛИ ТИП_КЛЕТКИ="REAL"  ТОГДА
       RESULT = "ЧИСЛО";
    ЕСЛИЖЕ ТИП_КЛЕТКИ="ЦЕЛОЕ"  ИЛИ ТИП_КЛЕТКИ="INTEGER" ИЛИ ТИП_КЛЕТКИ="ЦЕЛЫЙ" ТОГДА
       RESULT = "ЦЕЛОЕ";
    ЕСЛИЖЕ ТИП_КЛЕТКИ="ДАТА"   ИЛИ ТИП_КЛЕТКИ="DATE"    ТОГДА
       RESULT = "ДАТА";
    ЕСЛИЖЕ ТИП_КЛЕТКИ="ЛОГИЧЕСКОЕ" ИЛИ ТИП_КЛЕТКИ="ЛОГИЧЕСКИЙ" ИЛИ ТИП_КЛЕТКИ="LOGICAL" ТОГДА
       RESULT = "ЛОГИЧЕСКОЕ";
    ИНАЧЕ
       RESULT = "ВАРИАНТ";
    end;
  end;

--inobject Public

  func ЕстьИменаКолонок:Логическое;
    var i : Целое;
      ИменаКолонок = Nil;
      Result       = Ложь;
      i = SearchInArray(мас2Области0[1], "ИменаКолонок");
      Если i=-1 Тогда
      Иначе
         Если мас2Области0[220,i] = Nil Тогда
         Иначе
           ИменаКолонок = мас2Области0[220,i];
           Если ИменаКолонок.ColumnsCount > 1 и ИменаКолонок.RowsCount = 1 Тогда --Только Так!
              Result = Истина;
           end;
         end;
      end;
  end;

  func ЕстьИменаСтрок :Логическое;
    var i  : Целое;
      ИменаСтрок = Nil;
      Result     = Ложь;
      i = SearchInArray(мас2Области0[1], "ИменаСтрок");
      Если i=-1 Тогда
      Иначе
         Если мас2Области0[220,i] = Nil Тогда
         Иначе
           ИменаСтрок = мас2Области0[220,i];
           Если ИменаСтрок.ColumnsCount = 1 и ИменаСтрок.RowsCount > 1 Тогда -- Только Так!
              Result = Истина;
           end;
         end;
      end;
  end;

  func ЕстьТипы :Логическое;
    var i  : Целое;
      Типы   = Nil;
      Result = Ложь;
      i = SearchInArray(мас2Области0[1], "Типы");
      Если i=-1 Тогда
      Иначе
         Если мас2Области0[220,i] = Nil Тогда
         Иначе
           Типы = мас2Области0[220,i];
--           Если Типы.ColumnsCount = 1 и Типы.RowsCount > 1 Тогда -- Только Так!!
           Result = Истина;
--           end;
         end;
      end;
  end;

  func ЕстьИмена :Логическое;
    Result = Ложь;
    Если ЕстьИменаКолонок или
         ЕстьИменаСтрок   Тогда
      Result = Истина;
    end;
  end;



-----------------------------------------------------------------------------------
----------------------------КОНЕЦ!!!-----------------------------------------------
-----------------------------------------------------------------------------------
end