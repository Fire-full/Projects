extends ЗарплатаСтандарт.Вычислители.Реквизит;
--
--  Import СИС2 Classes СтроковыеФункции, ФункцииДокумента;
--  Import      Classes РаботаСКартотеками   ;
--
----InClass Public
--
--  ------------------------ФОЕ------------------------------------------
--  ------------------------ФОЕ------------------------------------------
--  ------------------------ФОЕ------------------------------------------
--  InObject Public
--
--  ---Звание
--    var locКатегСотр   : String = Если(Интерфейс.Перемещения=Nil,"", UP(Интерфейс.Перемещения[ИндексСотрудника].КатегорияДолжности.Код) );
--    var locЗваниеЕсть  : Logical;
--    var locЗваниеНаим  : String ;
--    var locЗваниеОклад : Число  ;
--    var locЗваниеДАТА  : Дата   ;
--    var locЗваниеЗап   : Zik_Гарнец.Справочники.интСотр_Звания;
--
--  func ПолучитьЗвание :Zik_Гарнец.Справочники.интСотр_Звания;     --ЗВАНИЯ
--     var Q : Query;
--
--        Q = Query.Create([Zik_Гарнец.Справочники.Сотр_Звания]);
--        Q.OpenHint[Query.IgnoreRecordFilter] = True;
--        Q.Order  = "СОТР.Имя;ДАТАПРИСВОЕНИЯ";
--        Q.Filter = СложитьСтрокиФильтраПоИ([
--                                          "ДАТАПРИСВОЕНИЯ<=" + Str(ДатаКонПериода),
--                                          "СОТР="            + Str(Сотрудник     )
--                                          ]);   --"ДАТАПРИСВОЕНИЯ<=31.01.2015" и "СОТР={Базовый.Данные.Субъект:95}"
--        if Q.RecordsExists then
--          Q.Select;
--          Q.Last;  --Последнюю запись
--          if Q.EOF then
--            if Валидный(Q.Current) then
--              locЗваниеЗап   = (Zik_Гарнец.Справочники.интСотр_Звания.OpenRecord(Q.Current as Zik_Гарнец.Справочники.Сотр_Звания));
--              locЗваниеЕсть  = Истина                  ;
--              locЗваниеНаим  = Q.Current.ЗВАНИЕ.Имя    ;
--              locЗваниеОклад = Q.Current.ЗВАНИЕ.ОКЛАД  ;
--              locЗваниеДАТА  = Q.Current.ЗВАНИЕ.ДАТАОВЗ;
--              Return locЗваниеЗап;
--            end;
--          end;
--        end;
--
--  end;
--  ---Звание
--  ---ПНВЛ
--    var locПНВЛЕсть  : Logical;
--    var locПНВЛНаим  : String ;
--    var locПНВЛОклад : Число  ;
--    var locПНВЛДАТА  : Дата   ;
--    var locПНВЛЗап   : Zik_Гарнец.Справочники.интПНВЛ;
--
--  func ПолучитьПНВЛ :Zik_Гарнец.Справочники.интПНВЛ;     --ЗВАНИЯ
--     var Q : Query;
--
--        Q = Query.Create([Zik_Гарнец.Справочники.ПНВЛ]);
--        Q.OpenHint[Query.IgnoreRecordFilter] = True;
--        Q.Order  = "СОТР.Имя;ДАТНАЧИСП";
--        Q.Filter = СложитьСтрокиФильтраПоИ([
--                                          "ДАТАПРИСВОЕНИЯ<=" + Str(ДатаКонПериода),
--                                          "СОТР="            + Str(Сотрудник     )
--                                          ]);   --"ДАТАПРИСВОЕНИЯ<=31.01.2015" и "СОТР={Базовый.Данные.Субъект:95}"
--        if Q.RecordsExists then
--          Q.Select;
--          Q.Last;  --Последнюю запись
--          if Q.EOF then
--            if Валидный(Q.Current) then
--              locПНВЛЗап   = (Zik_Гарнец.Справочники.интПНВЛ.OpenRecord(Q.Current as Zik_Гарнец.Справочники.ПНВЛ));
--              locПНВЛЕсть  = Истина                  ;
--              locПНВЛНаим  = Q.Current.ЗВАНИЕ.Имя    ;
--              locПНВЛОклад = Q.Current.ЗВАНИЕ.ОКЛАД  ;
--              locПНВЛДАТА  = Q.Current.ЗВАНИЕ.ДАТАОВЗ;
--              Return locПНВЛЗап;
--            end;
--          end;
--        end;
--  end;
--  ---ПНВЛ
--  ---Сотр_Выслуга
--    var locВыслугаЕсть  : Logical;
--    var locВыслугаНаим  : String ;
--    var locВыслугаТабл  : Число[2];
--    var locВыслуга      : Число  ;
--    var locВыслугаПроц  : Число  ;
--    var locВыслугаДАТА  : Дата   ;
--    var locВыслугаЗап   : Zik_Гарнец.Справочники.интСотр_Выслуга;
--
--     var  ВЫСЛУГАНАД :Дата;
--     var  ЛЕТ        :Целое;
--     var  МЕСЯЦЕВ    :Целое;
--     var  ДНЕЙ       :Целое;
--
--  func ПолучитьВыслугу :Zik_Гарнец.Справочники.интСотр_Выслуга;     --ЗВАНИЯ
----     var   Q    : Query;
--
--        --РасчитатьПНВЛ(Сотрудник, Record, ДатаНачПериода , ДатаКонПериода);
--
----        Q = Query.Create([Zik_Гарнец.Справочники.Сотр_Выслуга]);         --Record.Имя
----        Q.OpenHint[Query.IgnoreRecordFilter] = True;
----        Q.Order  = "СОТР.Имя;ДАТАПРИСВОЕНИЯ";
----        Q.Filter = СложитьСтрокиФильтраПоИ([
----                                          "ДАТАПРИСВОЕНИЯ<=" + Str(ДатаКонПериода),
----                                          "СОТР="            + Str(Сотрудник     )
----                                          ]);   --"ДАТАПРИСВОЕНИЯ<=31.01.2015" и "СОТР={Базовый.Данные.Субъект:95}"
----        if Q.RecordsExists then
----          Q.Select;
----          Q.Last;  --Последнюю запись
----          if Q.EOF then
----            if Валидный(Q.Current) then
----              locВыслугаЗап   = (Zik_Гарнец.Справочники.интСотр_Выслуга.OpenRecord(Q.Current as Zik_Гарнец.Справочники.Сотр_Выслуга));
----              locВыслугаЕсть  = Истина                ;
----              locВыслугаНаим  = Q.Current.ПНВЛ.Имя    ;
----              locВыслугаТабл  = (Вычислить(Q.Current.ПНВЛ.ТаблВСтроку) как Число[2] );  -- как Число[2]
----
----
----              Return locВыслугаЗап;
----            end;
----          end;
----        end;
----     Return locВыслугаЗап;
--  end;
--  ---Сотр_Выслуга
--
--  Функ ПолучитьТаблицуПНВЛ(ДатН:Дата):Запись;
--    Перем Зап :Запись;
--     --ФОЕ--   РабОбл=ОткрытьРабочуюОбласть("ПНВЛ","ДАТНАЧИСП","ДАТНАЧИСП<="+ДатуВСтроку(ДатН));
--     Зап = ВзятьПоследнююЗаписьКартотеки("Zik_Гарнец.Справочники.ПНВЛ","ДАТНАЧИСП","ДАТНАЧИСП<=" +  ВСтр (ДатН) ); --После введения Специальной Выслуги необходимо различать
--    Возврат Зап;
--  Кнуф;
--
--  Функ РасчетПНВЛПоСредней(Таблица :Запись; ДатН :Дата; ДатК :Дата):Число;
--    Перем ПроцН,ПроцК,Проп :Число;
--    Перем Дат1,ДатПред :Дата;
--
--    ПроцН = РасчетПНВЛ (Таблица,ДатН);
--    ПроцК = РасчетПНВЛ (Таблица,ДатК);
--    Если ПроцН=ПроцК:
--      Возврат ПроцК;
--    Иначе
--      Дат1    = ДатН;
--      ДатПред = ДатН;
--      Пока Дат1<=ДатК Цикл
--        ПроцК = РасчетПНВЛ(Таблица,Дат1);
--        Если ПроцН<>ПроцК:
--          Проп   = Проп+ПроцН*(((Дат1)-ДатПред));
--          ПроцН  = ПроцК;
--          ДатПред=Дат1;
--        Илсе;
--        Дат1=Дат1+1;
--      Лкиц;
--      Проп = Проп+ПроцН*(((Дат1)-ДатПред));
--    Илсе;
--    Возврат Проп/((ДатК+1)-ДатН);
--  Кнуф;
--
--  Функ РасчитатьПНВЛ(Сотр :Запись; ВидНачисления :Запись; ДатН :Дата; ДатК :Дата):Число;
--    Перем Метод :Целое;
--    Перем РабОблСотр :Запись;
--    Перем ПНВЛ       :Запись;
--    --Перем ВидНач     :Запись;
--    --Перем Метод :Целое;
--      РабОблСотр = ВзятьПоследнююЗаписьКартотеки("Zik_Гарнец.Справочники.Сотр_Выслуга", "ВЫСЛУГАНАД", "(Сотр="+Стр(Сотр)+") и (ВЫСЛУГАНАД<="+Стр(ДатК)
--                                                                                                                        +") и (ВидНачисления<="+Стр(ВидНачисления)+")" );
--      Если РабОблСотр<>Nil:
--        ПНВЛ        = РабОблСотр.ПНВЛ;
--        locВыслугаТабл = (Вычислить(ПНВЛ.ТаблВСтроку) как Число[2]);
--        Если locВыслугаТабл<>Пусто :
--          Метод      = РабОблСотр.Метод;
--          ВЫСЛУГАНАД = РабОблСотр.ВЫСЛУГАНАД;
--          ЛЕТ        = РабОблСотр.ВЫСЛУГАЛ;
--          МЕСЯЦЕВ    = РабОблСотр.ВЫСЛУГАМ;
--          ДНЕЙ       = РабОблСотр.ВЫСЛУГАД;
--          --ПНВЛ       = РабОблСотр.ПНВЛ;
--          --ВидНач     = РабОблСотр.ВидНачисления;
--
--          Если Метод=0:                                          --ПоСредней
--            locВыслугаПроц = РасчетПНВЛПоСредней(ПНВЛ, ДатН, ДатК);
--          ЕслиЖе Метод=1:                                        --На ДатНачала
--            locВыслугаПроц = РасчетПНВЛ(ПНВЛ,ДатН);
--          ЕслиЖе Метод=2:                                        --На ДатКонца
--            locВыслугаПроц = РасчетПНВЛ(ПНВЛ,ДатК);
--          Илсе;
--        Иначе
--          Трассировка("В картотеке ПНВЛ нет таблиц для расчета");
--        Илсе;
--      Иначе
--        Трассировка("У сотрудника "+ Стр(СОТРУДНИК.Имя) +" нет данных о ПНВЛ!");
--      Илсе;
--    Возврат Окр(locВыслугаПроц,3);
--  Кнуф;
--
--  Функ ПолучитьСреднДнейВГоду(ДатН:Дата; ДатК:Дата):Число;
--    Перем Дней :Число;
--    Перем Итер,КолЛет,ГодН :Целое;
--      ГодН=Год(ДатН)-1;
--      КолЛет=Если((Год(ДатК)-Год(ДатН))>0,Год(ДатК)-Год(ДатН),Если((Год(ДатК)-Год(ДатН))=0,1,Год(ДатН)-Год(ДатК)));
--      Для Итер=1..КолЛет Цикл
--        Дней=Дней+(Дат(1,1,ГодН+Итер+1)-Дат(1,1,ГодН+Итер));
--      Лкиц;
--    Возврат Дней/КолЛет;
--  Кнуф;
--
--  Функ РасчетЛет(Дат1:Дата):Число;
--  -- ??? Если выслуга лет указывается на дату, то включать эту дату в выслугу или не включать. Пока сделал что-бы включалась.
--  --Второй вариант не включает дату.
--    Возврат Год(Дат1)-Год(ВЫСЛУГАНАД)+(Мес(Дат1)-Мес(ВЫСЛУГАНАД))/12+(День(Дат1)-(День(ВЫСЛУГАНАД)))/ПолучитьСреднДнейВГоду(Дат1,ВЫСЛУГАНАД);
--  --  Возврат Год(Дат1)-Год(ВЫСЛУГАНАД)+(Мес(Дат1)-Мес(ВЫСЛУГАНАД))/12+(День(Дат1)-(День(ВЫСЛУГАНАД)-1))/ПолучитьСреднДнейВГоду(Дат1,ВЫСЛУГАНАД);
--  Конец;
--
--  Функ РасчетПроцПНВЛ(Таблица :Запись; Выслуга:Число):Число;
--    Перем Итер :Целое;
--        Если Выслуга <= 0:
--          Возврат 0;
--        Илсе;
--
--          Для Итер=1.. ДлинаМассива(locВыслугаТабл) Цикл
--            Если locВыслугаТабл[Итер,1] <= Выслуга:
--                 locВыслугаПроц = locВыслугаТабл[Итер,2];
--            Илсе;
--          Лкиц;
--
--    Возврат locВыслугаПроц;
--  Кнуф;
--
--  Функ РасчетПНВЛ(Таблица :Запись; Дат1 :Дата):Число;
--    Перем СрДнГ :Число;
--    Перем ЛетВ :Число;
--          ЛетВ = РасчетЛет(Дат1);
--          СрДнГ= ПолучитьСреднДнейВГоду (Дат(1,1,Год(ВЫСЛУГАНАД)-ЛЕТ),ВЫСЛУГАНАД);
--    Возврат РасчетПроцПНВЛ (Таблица, ЛЕТ+МЕСЯЦЕВ/12+ДНЕЙ/СрДнГ + ЛетВ);
--  Кнуф;
--
--  proc ПолучитьПараметрыФизЛица ;
--
--     extended ПолучитьПараметрыФизЛица ;  -- Расширяем Процедуру своим условием и Функц
--
--     --ОВЗ
--    если Постначисление=nil  тогда  --    СписокВычетов
--    иначе
--       если locЗваниеЕсть тогда     -- Record.Код  Интерфейс.ВидыРасчета    НомерДубля    Record.Имя
--       Иначе
----         если ИндексВидаРасчета=0 тогда
----          --......
----         иначе
--  --или
--           если Match(locКатегСотр, "ВОЕННОСЛ*") тогда     --если UP(Сотрудник.GroupDoc.Имя)="ВОЕННОСЛУЖАЩИЕ" тогда   --ВОЕННОСЛУЖАЩИЕ
--             если UP(Сотрудник.GroupDoc.Имя)="ВОЕННОСЛУЖАЩИЕ"  тогда     --ВОЕННОСЛУЖАЩИЕ
--               если Match(Record.Имя, "ОВЗ*") или Match(Record.Код, "ОВЗ*") тогда
--                 ПолучитьЗвание ;
--               иначе
--
--               конец;
--             конец;
--           конец;
----         конец;
--       конец;
--     --ПНВЛ
--       если locВыслугаЕсть тогда     -- Record.Код  Интерфейс.ВидыРасчета    НомерДубля   Record.Имя
--       Иначе
----         если ИндексВидаРасчета=0 тогда
----          --......
----         иначе
--          -- если Match(Record.Имя, "*ПНВЛ*") или Match(Record.Код, "*ПНВЛ*") тогда
--          --   ПолучитьВыслугу ;
--          -- конец;
----         конец;
--       конец;
--    конец;
--
--
--  end;
--  ---------------------------------------------------------
--  --  ИндексСотрудника      !!!
--  --  ИндексВидаРасчета     !!!
--  proc ВычислениеРасчета;
--    --..........
--    --..........
--    extended ВычислениеРасчета ;
--    --..........
--    --..........
----       если ИндексВидаРасчета=0 тогда
----        --......
----       иначе
----         если Match(Record.Имя, "ОВЗ*") или Match(Record.Код, "ОВЗ*") тогда
----           если locЗваниеЕсть тогда
--              --Здесь НЕОБХОДИМО учесть изменение оклада в ресчитываемом периоде!!!!!!
--              --Здесь НЕОБХОДИМО учесть изменение оклада в ресчитываемом периоде!!!!!!
--              --Здесь НЕОБХОДИМО учесть изменение оклада в ресчитываемом периоде!!!!!!
----              Показатель1 = Показатель1    ;                                              --
----              Показатель2 = Если(locЗваниеОклад=0,Показатель2,locЗваниеОклад) ;           --
----              Показатель3 = Если(locЗваниеОклад=0,Показатель3,locЗваниеОклад) ;           --
----              Интерфейс.РеквизитыРасчета[ИндексСотрудника, ИндексВидаРасчета].Показатель1 = Показатель1;
----              Интерфейс.РеквизитыРасчета[ИндексСотрудника, ИндексВидаРасчета].Показатель2 = Показатель2;
----              Интерфейс.РеквизитыРасчета[ИндексСотрудника, ИндексВидаРасчета].Показатель3 = Показатель3;
----           конец;
----         иначе
----
----         конец;
----       конец;
--
--  -- ЗаголовокПоля1 ЗаголовокПоля2  ЗаголовокПоля3
--  -- Показатель1 Показатель2 Показатель3
--
--  end;
--  ---------------------------------------------------------
--  --Пока отложу...
----  proc ПолучитьПараметрыВидаРасчета ;
----
----     extended ПолучитьПараметрыВидаРасчета ;  -- Расширяем Процедуру своим условием и Функц
----
----     если locЗваниеЕсть тогда    -- Интерфейс.ВидыРасчета    НомерДубля
----     Иначе
----       если Match(Record.Имя, "ОВЗ*") или Match(Record.Код, "ОВЗ*") тогда
----         ПолучитьЗвание ;
----       иначе
----
----       конец;
----     конец;
----
----
----  end;
--  ------------------------ФОЕ------------------------------------------
--  ------------------------ФОЕ------------------------------------------
--  ------------------------ФОЕ------------------------------------------
--
--inobject
--
end