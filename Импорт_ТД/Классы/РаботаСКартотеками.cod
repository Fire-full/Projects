class "Работа С Картотеками";

Import Classes СписокКартотек, Признаки ;

InClass Public

ИмяКарт  :Variant;

----------------------------------------------------------------------------------------------------
Функ ЕСТЬКАРТОТЕКА synonym ExistsCardFile (Карт : Строка) :Логическое;
 Перем ОбъектКласса  :Variant;
  ОбъектКласса         = НайтиКласс(Карт);
  If (ОбъектКласса = nil) Then
        Message("Картотека -"+Карт+"- не найдена.");   -- Для первичной отладки!!!!!
        Return Ложь;
  Иначе
        Return Истина;
  End;
Кнуф;
----------------------------------------------------------------------------------------------------
--Для тех случаем когда уже есть запрос, но необходимо узнать его количество записей
Функ КолЗап(Зап  :Запрос) :Целое;
   Возврат Зап.Count ;
Кнуф;
----------------------------------------------------------------------------------------------------
-- Для работы с данными, формируем Запрос по условиям,           Сортировать по Полю,   открыть по Фильтру
-- получаем Область данных для работы с ней ввиде запроса.
Функ ОткрытьРабочуюОбласть synonym OpenWorkArea (Карт : Строка;   ПолеУп : Строка="" ;   Фильтр : Строка="") :Запрос;
 Перем ОбъектКласса     :Variant;
 Перем РабОбл           :Запрос;
 --Перем Колич            :Целое;
  ОбъектКласса         = НайтиКласс(Карт);
  If (ОбъектКласса = nil) Then
    Message("Класс "+Карт+" не найден.");
    Return;
  End;
  РабОбл               = Запрос.Create([ОбъектКласса]); --Обращение к картотеке
  Если ПолеУп  = "" тогда
  Иначе
   РабОбл.Order        = ПолеУп;
  Илсе;
  если Фильтр = "" тогда
  Иначе
    РабОбл.Filter      = Фильтр ;           --Установить фильтр
  Илсе;
  РабОбл.Выбор  ;
  --Колич = РабОбл.Count ;
 Возврат РабОбл ;
Кнуф;
---------------------------------------------------------------------------------------------------- 
Функ ВзятьПервуюЗаписьКартотеки  ( КартСоответствий : Строка;  ПолеУп: Строка="" ; Фильтр: Строка="" ):Вариант;
 Перем РабОбл           :Запрос;
 Перем  Колич           :Целое;
   РабОбл = OpenWorkArea (КартСоответствий ,   ПолеУп ,   Фильтр ) ;
   Колич = РабОбл.Count         ;
   Если Колич = 0 тогда
     Сообщение ("Картотека "+КартСоответствий+" несодержит данных по условию!" );
     Возврат Nil                ;
   Иначе
     РабОбл.First;
     Возврат РабОбл.Current     ;
   конец;
Кнуф;
---------------------------------------------------------------------------------------------------- 
Функ ВзятьПоследнююЗаписьКартотеки  ( КартСоответствий : Строка;  ПолеУп: Строка="" ; Фильтр: Строка="" ):Вариант;
 Перем РабОбл           :Запрос;
 Перем  Колич           :Целое;
   РабОбл = OpenWorkArea (КартСоответствий ,   ПолеУп ,   Фильтр ) ;
   Колич = РабОбл.Count         ;
   Если Колич = 0 тогда
     Сообщение ("Картотека "+КартСоответствий+" несодержит данных по условию: - "+Фильтр );
     Возврат Nil                ;
   Иначе
     РабОбл.Last;
     Возврат РабОбл.Current     ;
   конец;
Кнуф;
---------------------------------------------------------------------------------------------------- 
Функ ВзятьЗначениеПоля (РабОбл:Запрос; Итер:Целое; Поле:Строка):Вариант;
 Перем В1        :Логическое;
 Перем  Колич,
        Нач, Кон     :Целое;
-- Определение МестоНахождения Нашего "ИТЕР" в Запросе.
  Колич = РабОбл.Count ;
  Если Колич = 0 тогда
     Трассировка("Запрос не имеет ни одной строки!!!");
     Возврат 0   ;
  конец;
  Если Колич > 999 тогда  --Для Больших запросов!!!!
    Нач   = Цел(Колич/2)     ; -- Почему на "2"? Не знаю! Возможно при большом колич, нужно делить на Большее число,
                               -- и определять принадлежность к фрагменту а там уже искать...
                               -- у нас, кстати, может быть очень большое число строк в результате запроса :(
    В1    = ( Итер <= Нач )  ; --Определяем в каком фрагменте наше число!!!
  -- Определение МестоНахождения Нашего "ИТЕР" в Запросе.
    Если  В1 тогда    -- В первой половине нашего списка
      -- Отбрасываем Явные Значения
      Если  Итер = 1    тогда
            РабОбл.First;   --Быстрый переход на Первую!
            Возврат РабОбл.Current.ВзятьПоле(Поле);
      ЕслиЖе Итер = 0   тогда
            Возврат 0   ;
      Иначе
            РабОбл.MoveBy(Итер);
            Возврат РабОбл.Current.ВзятьПоле(Поле) ;
      конец;
    Иначе             -- Во второй половине нашего списка
      РабОбл.Last;    -- Быстрый переход на Последнюю строку... и до Нашей!!!
      -- Отбрасываем Явные Значения
      Если  Колич = Итер  тогда
            Возврат РабОбл.Current.ВзятьПоле(Поле);
      Иначе --  и Начинаем работать с оставшимися случ.
            Кон =   - ((Колич + 1) - Итер) ;
            РабОбл.MoveBy( Кон );    --От последней в обратном порядке!!
            Возврат РабОбл.Current.ВзятьПоле(Поле) ;
      конец;
        --         ____________     ________
        -- Массив  1 2 3 4 5 6 | 7 | 8 9 10
        --                       |<  - - -
        --К Нашему "7", перебором в цикле, Быстрее перейти с конца чем с начала!
    конец; --Это истинно - только для больших запросов!!!
  Иначе    --А для малых Запросов возможно так лучше!!!
    Если  Итер = 1    тогда
          РабОбл.First;
          Возврат РабОбл.Current.ВзятьПоле(Поле);
    ЕслиЖе Колич = Итер  тогда
          РабОбл.Last;
          Возврат РабОбл.Current.ВзятьПоле(Поле);
    ЕслиЖе Итер = 0   тогда
          Возврат 0   ;
    Иначе
          РабОбл.MoveBy(Итер);
          Возврат РабОбл.Current.ВзятьПоле(Поле) ;
    конец;
  конец;

Кнуф;
-------------------------------------------------------------------------
--Использовать Функцию в Цикле НЕЛЬЗЯ!!
--Только Разовое использование!! Долго Работает!!!
Функ ВзятьПолеЦ Синоним GetFieldI (РабОбл:Запрос; Итер:Целое; Поле:Строка):Целое;
   Возврат Цел(ВзятьЗначениеПоля (РабОбл, Итер, Поле));
Кнуф;
----------------------------------------------------------------------------------------------------
Функ ВзятьПолеС Синоним GetFieldS (РабОбл:Запрос; Итер:Целое; Поле:Строка):Строка;
   Возврат Стр(ВзятьЗначениеПоля (РабОбл, Итер, Поле));
Кнуф;
----------------------------------------------------------------------------------------------------
Функ ВзятьПолеЧ Синоним GetFieldN (РабОбл:Запрос; Итер:Целое; Поле:Строка):Число;
 var ЗначениеЧисло  :Число;

   ИзСтр( ЗначениеЧисло, ВзятьЗначениеПоля (РабОбл, Итер, Поле));
   Возврат ЗначениеЧисло ;

Кнуф;
----------------------------------------------------------------------------------------------------
     --Перенести в стандартнную процедуру "ВзятьНастройкиПоУмолчанию" и "Что" взять!!!
Функ ВзятьИзНастроекПоУмолчанию (Что:Вариант):Вариант;
 Перем Q           : Query;
 Перем Кол         : Целое;
--     Q    = ОткрытьРабочуюОбласть ( КартНастройки ,   "Дата" ,  "Умолчание" ) ;  --  "Умолчание=Истина"
--     Кол  = КолЗап(Q) ;
--     Если Кол = 0 тогда
--       Возврат NIL ;
--     Иначе
--       Q.First;
--       Возврат Q.Текущий.GetField( Что ) ;
--     конец;

Кнуф;
----------------------------------------------------------------------------------------------------
Функ НачатьИзмененияВКартотеке(Где:Вариант): Вариант ;
 Перем НовДок  :Вариант;
       НовДок = НайтиКласс( Где )  ; --Определяем Класс нашего объектА проекта
       НачатьТранзакцию ([НовДок]) ; --Работаем с объектом
    Возврат НовДок ;
Кнуф;
----------------------------------------------------------------------------------------------------
Функ ВставитьЗапись(НовДок:Вариант): Record ;
  Перем НоваяЗапись : Record ;
    НоваяЗапись = НовДок.Create;          --Создаем новую запись(Строку в картотеке)
     IF НоваяЗапись.State = 0 THEN
      НоваяЗапись.Edit;
     FI;
      Возврат НоваяЗапись ;
Кнуф;
----------------------------------------------------------------------------------------------------
Функ НомерЗаписи(НоваяЗапись: Record ):Целое;
   Возврат  НоваяЗапись.DocID ;
Кнуф;
----------------------------------------------------------------------------------------------------
                   -- Новая Запись,          ИмяПоля,           Значение
Функ ЗаписатьПоле ( НоваяЗапись: Record ; FieldName :String; Value :Variant): Record ;
     НоваяЗапись.SetField(FieldName ,  Value) ;
Кнуф;
----------------------------------------------------------------------------------------------------
proc ЗакончитьИзменения(НоваяЗапись: Record ) ;
  if (НоваяЗапись.State = Record.Edited) or
     (НоваяЗапись.State = Record.Created) then
    НоваяЗапись.Post;
  end;
end;
--------------------------------------------------------------------------------
функ ПриведениеЗначенияКПипуПоляКартотеки( I :Целое;  N:Целое; Перем RangeMatrix [2]: Вариант ; Перем ArrayMatch [2]: Вариант ) :Вариант;  --   i - для Массива Соответствий,   N - для Массива Данных
 Перем Значение      : Вариант ;
 Перем ТипКартПоля   : Строка  ;  --в ArrayMatch  [
 Перем ТипДанных     : Строка  ;  --в RangeMatrix [

  Значение    = RangeMatrix [I, N ] ;  --  Значение    = RangeMatrix [ArrayMatch [4, I ] , N ] ;
  ТипКартПоля = ArrayMatch  [6, I ] ;
  ТипДанных   = ArrayMatch  [3, I ] ;

  Если Значение = NIL тогда
    Результат = NIL ;
  Иначе
     Если   ТипКартПоля = ТипДанных тогда  --Если Типы совпадают... ОК!
       Результат = Значение ;
     Иначе
         Если   ТипКартПоля = "Строка" тогда
             Результат = Стр(Значение);
         ЕслиЖе ТипКартПоля = "Целое"  тогда
             Результат = Цел(Значение);
         ЕслиЖе ТипКартПоля = "Число"  тогда
             Результат = Цел(Значение);
         ЕслиЖе ТипКартПоля = "Дата"   тогда
            Если ТипПеременной(Значение) = 1  тогда
              Результат = СтрокаВДату(Значение);
            ЕслиЖе  ТипПеременной(Значение) = 5  тогда
              Результат = Значение;
            Иначе
              HINT("Несоответствие типа данных (ДАТА операции) в Хls-файле! ");     --Закрыть
              Результат = Сегодня  ;
            Илсе;
         ЕслиЖе ТипКартПоля = "Логическое"  тогда
           Если   Значение = "Истина" тогда
               Результат = Истина;
           ЕслиЖе Значение = "Ложь"   тогда
               Результат = Ложь;
           ЕслиЖе Значение = "TRUE"   тогда
               Результат = Истина;
           ЕслиЖе Значение = "FALSE"  тогда
               Результат = Ложь;
           ЕслиЖе Значение = 1 тогда
               Результат = Истина;
           ЕслиЖе Значение = 0  тогда
               Результат = Ложь;
           Илсе;
         ЕслиЖе ТипКартПоля = "Ссылка"  тогда
           Признаки.Обновить ;
           Результат = Признаки.ВзятьЗаписьПризнака(Значение);
         конец;
     Илсе;
  Илсе;
Кнуф;
--------------------------------------------------------------------------------
проц ЗаписываемПроводку(N: Целое; Перем RangeMatrix [2]: Вариант; Перем ArrayMatch [2]: Вариант ) ;
 Перем НовДок      : Вариант ;
 Перем Значение    : Вариант ;
 Перем НоваяЗапись : Record ;
 Перем          i  : Целое ;
   ------
   НовДок = НачатьИзмененияВКартотеке(ИмяКарт);
    Попытка
     НоваяЗапись   = ВставитьЗапись(НовДок);
        ЗаписатьПоле ( НоваяЗапись,   "Проводить"  , Истина  ); -- Номер колонки в Полученном Массиве не знаем, получаем из массива соответсвий --ArrayMatch [4,N]
        for i=1..ДлинаМассива(ArrayMatch[1]) do
          Значение = ПриведениеЗначенияКПипуПоляКартотеки(  i  ,  N , RangeMatrix , ArrayMatch) ;
          ЗаписатьПоле ( НоваяЗапись, ArrayMatch [5,i] , Значение ); -- Номер колонки в Полученном Массиве не знаем, получаем из массива соответсвий --ArrayMatch [4,N]
        end;
     ЗакончитьИзменения(НоваяЗапись) ;
     ЗавершитьТранзакцию;
    Исключение
     ОтменитьТранзакцию ;
     Возбудить ;
    Конец;
   ------
конец;
----------------------------------------------------------------------------------------------------
inobject

end