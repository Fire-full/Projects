class  'Класс работы с Признаками';

Import Classes РаботаСКартотеками ;

InClass Public
------------------------------------------------------
------------------------------------------------------
Перем КартотекаСправочника : Строка  ;
Перем Код                  : Строка  ;
Перем Имя                  : Строка  ;
Перем Запись               : Запись  ;
Перем ПризнМас             : Вариант[2]   ;
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
InClass  Private
------------------------------------------------------
Проц ЗаполняемМассив ;
 var i           : Целое ;
 var Q           : Запрос ;
     Q   = ОткрытьРабочуюОбласть ( КартотекаСправочника ,      "Код"  ,  "" ) ;
     ------
     i=1 ;
     while not Q.EOF do
       ПризнМас[1,i]   = Q.Current.Код;
       ПризнМас[2,i]   = Q.Current.Наим;
       ПризнМас[3,i]   = Q.Current;
       i = i + 1 ;
       Q.Next;
     OD;
Цорп;
------------------------------------------------------
InClass Public
------------------------------------------------------
Проц Обновить ;
  ПризнМас = Nil ;
  ЗаполняемМассив ;
Цорп;
------------------------------------------------------
Функ ВзятьЗаписьПризнака ( Стр:Строка ) : Запись ;
  Перем i  : Целое ;
   Результат = NIL ;
   Если Стр = ""  Тогда
   Иначе
     Если   ДлинаМассива(ПризнМас) = 0  Тогда
        Обновить ;
        Результат = ВзятьЗаписьПризнака( Стр ) ;
     Иначе
        i = SearchInArray (ПризнМас[2], Стр);    -- Код
        Если i = -1 then
          i = SearchInArray (ПризнМас[2], Стр);  -- поле Наименование
          Если i = -1 then
              ДобавитьНовыйПризнака ( Стр ) ;
              Обновить ;
              Результат = ВзятьЗаписьПризнака( Стр ) ;
          Иначе
            Результат = ПризнМас[3,i];
          Илсе;
        Иначе
          Результат = ПризнМас[3,i];
        Илсе;
     Илсе;
   Илсе;
Кнуф;
----------------------------------------------------------------------------
Функ ВзятьКодПризнака( Стр:Строка ) : Строка ;
 Перем i  : Целое ;
  Если Стр = ""  Тогда
  Иначе
    Если ДлинаМассива(ПризнМас) = 0  Тогда
       Обновить ;
       Возврат ВзятьКодПризнака ( Стр ) ;
    Иначе
       i = SearchInArray (ПризнМас[2], Стр); -- Наим
       Если i = -1 then
         ДобавитьНовыйПризнака   ( Стр ) ;
         Возврат ВзятьКодПризнака( Стр ) ;
       Иначе
         Возврат ПризнМас[1,i];
       Илсе;
    Илсе;
  Илсе;
Кнуф;
----------------------------------------------------------------------------
PROC ДокументEdit(D:Документ);
 IF D.State = 0 THEN
  D.Edit;
 FI;
END;
------------------------------------------------------
Проц ДобавитьНовыйПризнака(ТекСтр : Строка  ) ;
 Перем НовДок       : Вариант ;
 Перем НоваяЗапись  : Запись  ;

    if ТекСтр = "" then
    Иначе
      ------
      НовДок = НайтиКласс( КартотекаСправочника ) ; -- Определяем объект нашего проекта
      НачатьТранзакцию ([НовДок]) ;                 -- Работаем с объектом
      Попытка
         НоваяЗапись = НовДок.Create;               -- Создаем новую запись(Строку в картотеке)
         ДокументEdit(НоваяЗапись);
         НоваяЗапись.Код  = Стр(НоваяЗапись.DocID)  ;
         НоваяЗапись.Наим = ТекСтр ;
         IF (НоваяЗапись.State = 1) OR (НоваяЗапись.State = 2) THEN
           НоваяЗапись.Post;
         FI;
         ЗавершитьТранзакцию;
      Исключение
        ОтменитьТранзакцию ;
        Возбудить ;
      Конец;
      ------
    end;
    ------
    Обновить ;
    ------
Цорп;
------------------------------------------------------
InObject Private
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
------------------------------------------------------
end
