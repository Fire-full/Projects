Class inherited 2МашинаРеквизитов.Базовые.редБазовыйДокумент0 "Бланк Мониторинга импорта",
         editor 2Импорт_ТД.Импорт_ТД.запМониторинг0;

import 2сис2            0 classes 2исключения, строковыефункции, функцииртти, функциидокумента, функции;
import 2МашинаРеквизитов0 classes 2Библио;
Import 2       0          Classes 2Импорт_ТД.РедСоответствиеПолей0, 2СписокКартотек;

InClass 2 0Public

  var ВнешнийВызов : Logical;

InObject Public
----------------------------------------------------------------------------
  proc шаблон_ПриОткрытии(Create :Logical);
    inherited шаблон_ПриОткрытии(Create);
    -- Вызывается при открытия окна формы
    --   Create: True - форма открывается, False - форма восстанавливается при запуске сессии
     Если ВнешнийВызов Тогда
        Внешний_Вызов("ВнешнийВызов");
        ----------------
        Close(cmCancel); -- Закрытие Тек. Бланка!!
        ----------------
     Илсе;
  end;
----------------------------------------------------------------------------
  func Внешний_Вызов                      (Вызывающий:Строка ) : Логическое;
    перем Sender :Button;
       Если Вызывающий="" тогда

       Иначе
           Sender.Caption = "2ВнешнийВызов0";
           Button1OnClick( Sender );
       конец;
    Result = true; -- Разрешаем переключение
  end;
----------------------------------------------------------------------------
 lClass       : Класс BlankForm;
 БланкМакета  : BlankForm;
----------------------------------------------------------------------------
--  Функ Запись_Var_Бланка( БланкР :Строка; ИмяПерем:Строка; ЗначПерем:Вариант): Логическое;
--   Перем lClass      : Класс BlankForm;
--   Перем БланкМакета : BlankForm;
--   Перем ВремБланк   : BlankForm;
--
--      lClass = СИС2.ФункцииКонсоли.НайтиФормуБланка(БланкР);
--      If lClass = nil Then
--         Return Ложь;
--      Иначе
--          БланкМакета  = lClass.Создать;
--          ВремБланк    = БланкМакета;
--          если БланкМакета.ObjectsCount=1 тогда
--              --???
--          Иначе
--              БланкМакета = nil ;
--              БланкМакета = ВремБланк.Objects[1];    -- БланкМакета.ObjectsCount
--          конец;
--          БланкМакета.ВнешнийВызов = Истина;
--          --Вычислить("БланкМакета."+ ИмяПерем + "=" + str(ЗначПерем) );
--          --Вычислить("" + БланкМакета +"."+ ИмяПерем + "=" + str(ЗначПерем) );
--
--         Return Истина;
--      End;
--
--  Кнуф;
----------------------------------------------------------------------------
  proc Button1OnClick                    (Sender :Button);
    var i,lPos, FieldsCount: integer;
    var ЗагружПоле : integer;
    var lStringValue, lField1, lField2: string;
    var lRec: record;
    var lField : Запись ;
    var БланкРед    : string ;
    var Отказано    : Логическое;
    var lClass      : Класс BlankForm;
    var БланкМакета :       BlankForm;
    var ВремБланк   :       BlankForm;
--       ТекущНастройка  = картСоответствийЗапись как Запись;
       БланкРед = БланкРедСоответствийСтр;

       2Е0сли Позиции.Количество=0 тогда
        -----------------------------
       Иначе
        --------ОБРАБОТЧИК СТРОК-----
        -- ............
         2Е0сли Sender.Caption = "2ВнешнийВызов0" тогда

         Иначе
            FieldsCount = Позиции.Количество;
--            Отказано = Запись_Var_Бланка( БланкРед, "ВнешнийВызов", Истина);
--            если Отказано тогда
--              Трассировка("Ошибка записи значения в переменную -'ВнешнийВызов', бланка -'"+БланкРед+"'!");
--            Иначе

              lClass = СИС2.ФункцииКонсоли.НайтиФормуБланка(БланкРед);
              БланкМакета  = lClass.Создать;
              БланкМакета.ВнешнийВызов = Истина ;

--                  ВремБланк    = БланкМакета;
--                  если БланкМакета.ObjectsCount=1 тогда
--                      --???
--                  Иначе
--                      БланкМакета = nil ;
--                      БланкМакета = ВремБланк.Objects[1];    -- БланкМакета.ObjectsCount
--                  конец;
--                  БланкМакета.ВнешнийВызов = Истина;


              -- БланкРед.ВнешнийВызов = Истина;
              for i = 1..FieldsCount do  --Цикл !
                  lField = Позиции[i].GetField("Настройка");
                  OpenBlankEditor( БланкРед, lField);
              Od;

--              lClass = СИС2.ФункцииКонсоли.НайтиФормуБланка(БланкРед);
--              БланкМакета  = lClass.Создать;
              БланкМакета.ВнешнийВызов = Ложь;
              БланкМакета              = Nil ;
--            конец;
--            Запись_Var_Бланка( БланкРед, "ВнешнийВызов", Ложь);

         конец;
         -- ............
        -----------------------------
       конец;
  end;
----------------------------------------------------------------------------
  func ПолеЗаголовокОкнаФормы_ПриВыводе  (Cell :TemplateCell; Value :Variant; Action :Template.OutputTypes; var Format :String) :String;
      -- Обработка вывода значения поля в зависимости от типа события
      -- Параметры:
      --           Cell2   0: клетка шаблона
      --           Value2  0: значение в поле клетки
      --           Action2 0: тип вывода (Вывод,Вычисление,Копирование,Экспорт)
      --           Format2 0: строка-формат вывода значения
    Result = inherited ПолеЗаголовокОкнаФормы_ПриВыводе(Cell, Value, Action, Format);
    Result = Value; -- Что получили, то и выводим
  end;
----------------------------------------------------------------------------
----------------------------------------------------------------------------
----------------------------------------------------------------------------
END
